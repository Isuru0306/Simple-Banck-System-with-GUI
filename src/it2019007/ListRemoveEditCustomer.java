/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it2019007;

import java.awt.Color;
import java.awt.Font;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author isuru
 */
public final class ListRemoveEditCustomer extends javax.swing.JFrame {

    /**
     * Creates new form ListRemoveEditCustomer
     */
    private double accountAmount = 0;
    private String userName = "";
     private String date;
    private String inTime;
    public ListRemoveEditCustomer() {
        initComponents();
        this.setLocationRelativeTo(null);
        showCustomerTable("SELECT * FROM `customer`;");
        showTransactionTable("SELECT * FROM `transactiond`;");
    }

     public void setUserName(String user){
        this.userName = user;
        
    }
     
     public void setUsername(String user, String date, String logTime){
        this.userName = user;
        this.date = date;
        this.inTime = logTime;     
    }
     
     
     
      public void showCustomerTable(String mysql){
        
         ArrayList<TraData> list;
         DatabaseConnection con = new DatabaseConnection();
        if(!mysql.isEmpty()){
            list = con.getCustomerDetails(mysql);
        }else{
            list = con.getCustomerDetails(mysql);
        }
        
        JTableHeader header= customerDatilsTable.getTableHeader();
        header.setForeground(Color.DARK_GRAY);
        header.setFont(new Font(null,Font.BOLD,18));
            
         DefaultTableModel model = (DefaultTableModel) customerDatilsTable.getModel();
         model.setRowCount(0);
         Object[] row = new Object[10];
         for(int i = 0;i<list.size();i++){
                row[0] = i+1;
                row[1] = list.get(i).getString0();
                row[2] = list.get(i).getString1();
                row[3] = list.get(i).getString2();
                row[4] = list.get(i).getString3();
                row[5] = list.get(i).getString4();
                row[6] = list.get(i).getString5();
                row[7] = list.get(i).getString6();
                row[8] = list.get(i).getString7();
                row[9] = list.get(i).getAmount();
                this.accountAmount = list.get(i).getAmount();
                model.addRow(row);           
            }
        
    }
    
     public void showTransactionTable(String mysql){
        
         ArrayList<TraData> list;
         DatabaseConnection con = new DatabaseConnection();
   
         list = con.getTaransactionRecords(mysql);

        JTableHeader header= transactionTable.getTableHeader();
        header.setForeground(Color.DARK_GRAY);
        header.setFont(new Font(null,Font.BOLD,20));
            
         DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
         model.setRowCount(0);
         Object[] row = new Object[7];
         for(int i = 0;i<list.size();i++){
                row[0] = i+1;
                row[1] = list.get(i).getString0();
                row[2] = list.get(i).getString1();
                row[3] = list.get(i).getString2();
                row[4] = list.get(i).getString3();
                row[5] = "Rs."+list.get(i).getAmount();
                row[6] = list.get(i).getString4();

                model.addRow(row);
                
            }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerDatilsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        selectbox = new javax.swing.JComboBox<>();
        updateButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        amount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        acType = new javax.swing.JComboBox<>();
        state = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        telephone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        other = new javax.swing.JRadioButton();
        age = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        accountNo = new javax.swing.JTextField();
        createCustomerAccount = new javax.swing.JButton();
        clearDate = new javax.swing.JButton();
        deposits = new javax.swing.JButton();
        withdrawAmount1 = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        userButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customerDatilsTable.setAutoCreateRowSorter(true);
        customerDatilsTable.setBackground(new java.awt.Color(51, 0, 51));
        customerDatilsTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        customerDatilsTable.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        customerDatilsTable.setForeground(new java.awt.Color(255, 255, 255));
        customerDatilsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Ac No", "Name", "Age", "Gender", "Telephone", "Address", "State", "Ac type", "Amount"
            }
        ));
        customerDatilsTable.setColumnSelectionAllowed(true);
        customerDatilsTable.setDropMode(javax.swing.DropMode.ON);
        customerDatilsTable.setGridColor(new java.awt.Color(0, 153, 153));
        customerDatilsTable.setRowHeight(24);
        customerDatilsTable.setSelectionBackground(new java.awt.Color(0, 51, 51));
        customerDatilsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerDatilsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerDatilsTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 1550, 130));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel1.setText("Bank System");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 30, -1, -1));

        searchButton.setBackground(new java.awt.Color(0, 0, 0));
        searchButton.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 330, 192, 46));

        delete.setBackground(new java.awt.Color(0, 0, 0));
        delete.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 470, 192, 43));

        selectbox.setFont(new java.awt.Font("Consolas", 3, 20)); // NOI18N
        selectbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select display list", "All", "Saving", "Fixed", "Current" }));
        selectbox.setBorder(null);
        selectbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                selectboxMouseReleased(evt);
            }
        });
        selectbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectboxActionPerformed(evt);
            }
        });
        jPanel1.add(selectbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 270, 260, 38));

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 400, 192, 45));

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        amount.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        amount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });
        jPanel3.add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 270, 32));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel9.setText("Amount :");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, 25));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel7.setText("Ac type:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, 25));

        acType.setFont(new java.awt.Font("Consolas", 3, 18)); // NOI18N
        acType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Account Type", "Saving", "Fixed", "Current" }));
        jPanel3.add(acType, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 270, 32));

        state.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        state.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel3.add(state, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, 270, 32));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel8.setText("State:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, -1, 32));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel6.setText("Address:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, 25));

        address.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        address.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel3.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 270, 32));

        telephone.setFont(new java.awt.Font("Consolas", 3, 18)); // NOI18N
        telephone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel3.add(telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 270, 32));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel5.setText("Telephone:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 25));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel4.setText("Gender:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, -1, 25));

        buttonGroup1.add(female);
        female.setFont(new java.awt.Font("Consolas", 3, 18)); // NOI18N
        female.setText("Female");
        female.setBorder(null);
        female.setContentAreaFilled(false);
        jPanel3.add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, -1, -1));

        buttonGroup1.add(male);
        male.setFont(new java.awt.Font("Consolas", 3, 18)); // NOI18N
        male.setText("Male");
        male.setBorder(null);
        male.setContentAreaFilled(false);
        jPanel3.add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 140, -1, -1));

        buttonGroup1.add(other);
        other.setFont(new java.awt.Font("Consolas", 3, 18)); // NOI18N
        other.setText("Other");
        other.setBorder(null);
        other.setContentAreaFilled(false);
        jPanel3.add(other, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 140, -1, -1));

        age.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        age.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageActionPerformed(evt);
            }
        });
        jPanel3.add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 80, 270, 32));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel3.setText("Age:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, -1, 25));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel2.setText("Name:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, 25));

        name.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel3.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 270, 32));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel10.setText("Ac no:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, 25));

        accountNo.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        accountNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        accountNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountNoActionPerformed(evt);
            }
        });
        jPanel3.add(accountNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 270, 32));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 930, 340));

        createCustomerAccount.setBackground(new java.awt.Color(0, 0, 0));
        createCustomerAccount.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        createCustomerAccount.setForeground(new java.awt.Color(255, 255, 255));
        createCustomerAccount.setText("Create");
        createCustomerAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCustomerAccountActionPerformed(evt);
            }
        });
        jPanel1.add(createCustomerAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 270, 200, 40));

        clearDate.setBackground(new java.awt.Color(0, 0, 0));
        clearDate.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        clearDate.setForeground(new java.awt.Color(255, 255, 255));
        clearDate.setText("Clear");
        clearDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDateActionPerformed(evt);
            }
        });
        jPanel1.add(clearDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 530, 190, 40));

        deposits.setBackground(new java.awt.Color(0, 0, 0));
        deposits.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        deposits.setForeground(new java.awt.Color(255, 255, 255));
        deposits.setText("Deposits");
        deposits.setBorder(null);
        deposits.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deposits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositsActionPerformed(evt);
            }
        });
        jPanel1.add(deposits, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 340, 260, 40));

        withdrawAmount1.setBackground(new java.awt.Color(0, 0, 0));
        withdrawAmount1.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        withdrawAmount1.setForeground(new java.awt.Color(255, 255, 255));
        withdrawAmount1.setText("Withdraw");
        withdrawAmount1.setBorder(null);
        withdrawAmount1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        withdrawAmount1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawAmount1ActionPerformed(evt);
            }
        });
        jPanel1.add(withdrawAmount1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 400, 260, 40));

        logout.setBackground(new java.awt.Color(0, 0, 0));
        logout.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel1.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 530, 260, -1));

        transactionTable.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Date", "Time", "Hanndle by", "Transaction", "Amount", "Account No"
            }
        ));
        transactionTable.setRowHeight(24);
        jScrollPane2.setViewportView(transactionTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 610, 1540, 130));

        userButton.setBackground(new java.awt.Color(0, 0, 0));
        userButton.setFont(new java.awt.Font("Consolas", 3, 24)); // NOI18N
        userButton.setForeground(new java.awt.Color(255, 255, 255));
        userButton.setText("Add User");
        userButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userButtonActionPerformed(evt);
            }
        });
        jPanel1.add(userButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 465, 260, 40));

        jMenu1.setText("File");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuItem1.setText("Logout");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        logoutActionPerformed(evt);
        this.dispose();
    }//GEN-LAST:event_ExitActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
         if(!accountNo.getText().isEmpty()){
             showCustomerTable("SELECT * FROM `customer` WHERE `acNo` = "+accountNo.getText());
             showTransactionTable("SELECT * FROM `transactiond` WHERE `accountNo` ="+accountNo.getText());
        }
         
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        DatabaseConnection con = new DatabaseConnection();
        if(!accountNo.getText().isEmpty()){
            if(con.deleteCustomerDeytails(accountNo.getText())){
                JOptionPane.showMessageDialog(null, "Deleted");
                showCustomerTable("SELECT * FROM `customer`;");
            }else{
                JOptionPane.showMessageDialog(null, "Can't Deleted");
                showCustomerTable("SELECT * FROM `customer`;");
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void customerDatilsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerDatilsTableMouseClicked
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) customerDatilsTable.getModel();
        int selectRow =  customerDatilsTable.getSelectedRow();
      
      
      name.setText(model.getValueAt(selectRow, 2).toString());
      age.setText(model.getValueAt(selectRow, 3).toString());
      telephone.setText(model.getValueAt(selectRow, 5).toString());
      address.setText(model.getValueAt(selectRow, 6).toString());
      
      
      
      accountNo.setText(model.getValueAt(selectRow, 1).toString());
      accountNo.disable();
      
      acType.setName(model.getValueAt(selectRow, 8).toString());
      acType.disable();
      
      state.setText(model.getValueAt(selectRow, 7).toString());
      state.disable();
      
      amount.setText(model.getValueAt(selectRow, 9).toString());
      amount.disable();
    }//GEN-LAST:event_customerDatilsTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        
        if(!name.getText().isEmpty() || !age.getText().isEmpty() || !telephone.getText().isEmpty() || !address.getText().isEmpty()){
        DatabaseConnection con = new DatabaseConnection();
            if(con.updateCustomerTable(name.getText(), Integer.parseInt(age.getText()), telephone.getText(), address.getText(),  accountNo.getText())){
                JOptionPane.showMessageDialog(null, "Update successful");
            }else{
                JOptionPane.showMessageDialog(null, "Can't Update ");
            }
            
            showCustomerTable("SELECT * FROM `customer`;");
            clearDateActionPerformed(evt);
        }
        
        
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_updateButtonMouseClicked

    private void createCustomerAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createCustomerAccountActionPerformed
        // TODO add your handling code here:
        if(accountNo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Account number must be filled out");
        }else{
            if(name.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Name is required");
            }else{
                if(age.getText().isEmpty() || 18 > Integer.parseInt(age.getText())){
                    JOptionPane.showMessageDialog(null, "Age is required...! and 18+");
                }else{

                    String gender = "Other";
                    if(female.isSelected()){ gender = "Female"; }
                    if(male.isSelected()){ gender = "Male"; }

                    if(telephone.getText().isEmpty()){
                        JOptionPane.showMessageDialog(null, "telephone number is required...!");
                    }else{

                        if(address.getText().isEmpty()){
                            JOptionPane.showMessageDialog(null, "Address is required...!");
                        }else{

                            if(state.getText().isEmpty()){
                                JOptionPane.showMessageDialog(null, "State is required...!");
                            }else{
                                String accountType = "Saving";
                                if("Fixed".equals(acType.getItemAt(acType.getSelectedIndex()))){ accountType = "Fixed";}
                                if("Current".equals(acType.getItemAt(acType.getSelectedIndex()))){ accountType = "Current";}

                                if(amount.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Deposit amount  is required...!");
                                }else{
                                    if(100 > Integer.parseInt(amount.getText())){
                                        JOptionPane.showMessageDialog(null, "Amout must be greter than LK100");
                                    }else{
                                        //do something
                                        DatabaseConnection con = new DatabaseConnection();
                                        if(con.inserDataForCustomer
                                            (accountNo.getText(),
                                                name.getText(),
                                                age.getText(),
                                                gender,
                                                telephone.getText(),
                                                address.getText(),
                                                state.getText(),
                                                accountType,
                                                Integer.parseInt(amount.getText())
                                            )){
                                                JOptionPane.showMessageDialog(null, "Insert succesfully");
                                                showCustomerTable("SELECT * FROM `customer`;");
                                            }else{
                                                JOptionPane.showMessageDialog(null, "Can't Insert data, dublicate Account number key");
                                            }

                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }

    }//GEN-LAST:event_createCustomerAccountActionPerformed

    private void clearDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDateActionPerformed
        // TODO add your handling code here
        accountNo.setText("");
        accountNo.enable();
        
        name.setText("");
        age.setText("");
        
        telephone.setText("");
        address.setText("");
        
        state.setText("");
        state.enable();
        
        amount.setText("");
        amount.enable();
        
        acType.enable();
    }//GEN-LAST:event_clearDateActionPerformed

    private void ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageActionPerformed

    private void accountNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountNoActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void depositsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositsActionPerformed
        // TODO add your handling code here:

        if(!accountNo.getText().isEmpty()){
            double amountPre = this.accountAmount;
            int wdAmoubt = Integer.parseInt(amount.getText());

            double fullAmount =  (amountPre + wdAmoubt);
            DatabaseConnection con = new DatabaseConnection();
            con.depositAmount(accountNo.getText(), fullAmount);
            transactionRecordUpdate("Deposits", wdAmoubt, accountNo.getText());
             searchButtonActionPerformed(evt);
            

        }

    }//GEN-LAST:event_depositsActionPerformed

    private void transactionRecordUpdate(String method, int amount, String accNo){
        
        String datel = LocalDate.now().toString();
        String time = LocalTime.now().toString();
        
        DatabaseConnection con = new DatabaseConnection();
        con.insertDataForTransactionRecordsTable(datel, time, userName, method, amount, accNo);
        
    }
    
    
    private void withdrawAmount1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawAmount1ActionPerformed
        // TODO add your handling code here:
        if(!accountNo.getText().isEmpty()){
            double amounPri = this.accountAmount;
            int wdAmoubt = Integer.parseInt(amount.getText());

            if(100 < amounPri){

                if(amounPri > wdAmoubt && wdAmoubt > 0){
                    double fullAmount =  (amounPri - wdAmoubt);
                    DatabaseConnection con = new DatabaseConnection();
                    con.witdrawAmount(accountNo.getText(), fullAmount);
                    transactionRecordUpdate("Withdraw", wdAmoubt, accountNo.getText());
                    searchButtonActionPerformed(evt);
                }else{
                    JOptionPane.showMessageDialog(null,"Error");
                }
            }else{
                JOptionPane.showMessageDialog(null,"Not sufficient balance");
            }
        }
    }//GEN-LAST:event_withdrawAmount1ActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here
        String outTime = LocalTime.now().toString();
        DatabaseConnection con = new DatabaseConnection();
        con.insertDataUserloginRecordsTable(userName, date, inTime, outTime);
        new Home().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutActionPerformed

    private void userButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userButtonActionPerformed
        // TODO add your handling code here:
        new UserListLoginRecord().setVisible(true);
    }//GEN-LAST:event_userButtonActionPerformed

    private void selectboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectboxActionPerformed
//         TODO add your handling code here:
         if("All".equals(selectbox.getItemAt(selectbox.getSelectedIndex()))){
                showCustomerTable("SELECT * FROM `customer`");
                showTransactionTable("SELECT * FROM `transactiond`;");
                System.out.println(selectbox.getItemAt(selectbox.getSelectedIndex()));
            }else{
                 showCustomerTable("SELECT * FROM `customer` WHERE `actype` = '" + selectbox.getItemAt(selectbox.getSelectedIndex()) + "';");
                showTransactionTable("SELECT * FROM `transactiond`;");
                System.out.println(selectbox.getItemAt(selectbox.getSelectedIndex()));
            }
       
//    showCustomerTable("SELECT * FROM `customer` WHERE `actype` = '" + selectbox.getItemAt(selectbox.getSelectedIndex()) + "';");
    }//GEN-LAST:event_selectboxActionPerformed

    private void selectboxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectboxMouseReleased
        // TODO add your handling code here:
   
    }//GEN-LAST:event_selectboxMouseReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        logoutActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListRemoveEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListRemoveEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListRemoveEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListRemoveEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListRemoveEditCustomer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JComboBox<String> acType;
    private javax.swing.JTextField accountNo;
    private javax.swing.JTextField address;
    private javax.swing.JTextField age;
    private javax.swing.JTextField amount;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearDate;
    private javax.swing.JButton createCustomerAccount;
    private javax.swing.JTable customerDatilsTable;
    private javax.swing.JButton delete;
    private javax.swing.JButton deposits;
    private javax.swing.JRadioButton female;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField name;
    private javax.swing.JRadioButton other;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> selectbox;
    private javax.swing.JTextField state;
    private javax.swing.JTextField telephone;
    private javax.swing.JTable transactionTable;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton userButton;
    private javax.swing.JButton withdrawAmount1;
    // End of variables declaration//GEN-END:variables
}
